I"Bd<p>A conversion from JavaScript (JS) array to scatter plot [<a href="#ref1">1</a>], which is displayed using <code class="language-plaintext highlighter-rouge">oo</code> [<a href="#ref2">2</a>] is presented in this article.</p>

<h2 id="oo-tag">oo tag</h2>
<p>A scatter plot of $y$ againts $x$ with data (0, 2), (0.5, 2.5), (1, 3), (1.5, 3.125), (2, 3), (2.5, 2.5), and (3, 2) can be illustrate as follow.</p>

<oo>
svg 200 200 #fafafa fig:osp-yx|Scatter of $y$ againts $x$.

style lc:#000 ls:6-2 lw:0.3 lo:0.8
grid 20 20 180 180 40 40
style lc:#000 ls:0 lw:1 lo:1 fc:#000
arrow 20 180 180 180
arrow 20 180 20 20
style lc:#000 ls:0 lw:1 lo:1 fc:#000
circle 20 180 2
style lw:0 fc:#000 fo:1 ts:italic tw:normal tf:Times tz:16px
text 186 183 x
text 18 12 y

style lw:0 fc:#000 fo:1 ts:normal tw:normal tf:Times tz:16px
text 15 197 0
text 55 197 1
text 95 197 2
text 135 197 3
text 5 185 0
text 5 145 1
text 5 105 2
text 5 65 3

style lc:#f00 ls:0 lw:1.5 lo:1 fc:#fff
circle 20 100 3
circle 40 80 3
circle 60 60 3
circle 80 55 3
circle 100 60 3
circle 120 80 3
circle 140 100 3
</oo>

<p>Following code are required to display Fig. <a href="#fig:osp-yx">1</a> using <code class="language-plaintext highlighter-rouge">oo</code></p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">oo</span><span class="o">&gt;</span>
<span class="nt">svg</span> <span class="nt">200</span> <span class="nt">200</span> <span class="nf">#fafafa</span> <span class="nt">fig</span><span class="nd">:osp-yx</span><span class="o">|</span><span class="nt">Scatter</span> <span class="nt">of</span> <span class="err">$</span><span class="nt">y</span><span class="err">$</span> <span class="nt">againts</span> <span class="err">$</span><span class="nt">x</span><span class="err">$</span><span class="o">.</span>

<span class="nt">style</span> <span class="nt">lc</span><span class="o">:</span><span class="nf">#000</span> <span class="nt">ls</span><span class="nd">:6-2</span> <span class="nt">lw</span><span class="nd">:0</span><span class="nc">.3</span> <span class="nt">lo</span><span class="nd">:0</span><span class="nc">.8</span>
<span class="nt">grid</span> <span class="nt">20</span> <span class="nt">20</span> <span class="nt">180</span> <span class="nt">180</span> <span class="nt">40</span> <span class="nt">40</span>
<span class="nt">style</span> <span class="nt">lc</span><span class="o">:</span><span class="nf">#000</span> <span class="nt">ls</span><span class="nd">:0</span> <span class="nt">lw</span><span class="nd">:1</span> <span class="nt">lo</span><span class="nd">:1</span> <span class="nt">fc</span><span class="o">:</span><span class="nf">#000</span>
<span class="nt">arrow</span> <span class="nt">20</span> <span class="nt">180</span> <span class="nt">180</span> <span class="nt">180</span>
<span class="nt">arrow</span> <span class="nt">20</span> <span class="nt">180</span> <span class="nt">20</span> <span class="nt">20</span>
<span class="nt">style</span> <span class="nt">lc</span><span class="o">:</span><span class="nf">#000</span> <span class="nt">ls</span><span class="nd">:0</span> <span class="nt">lw</span><span class="nd">:1</span> <span class="nt">lo</span><span class="nd">:1</span> <span class="nt">fc</span><span class="o">:</span><span class="nf">#000</span>
<span class="nt">circle</span> <span class="nt">20</span> <span class="nt">180</span> <span class="nt">2</span>
<span class="nt">style</span> <span class="nt">lw</span><span class="nd">:0</span> <span class="nt">fc</span><span class="o">:</span><span class="nf">#000</span> <span class="nt">fo</span><span class="nd">:1</span> <span class="nt">ts</span><span class="nd">:italic</span> <span class="nt">tw</span><span class="nd">:normal</span> <span class="nt">tf</span><span class="nd">:Times</span> <span class="nt">tz</span><span class="nd">:16px</span>
<span class="nt">text</span> <span class="nt">186</span> <span class="nt">183</span> <span class="nt">x</span>
<span class="nt">text</span> <span class="nt">18</span> <span class="nt">12</span> <span class="nt">y</span>

<span class="nt">style</span> <span class="nt">lw</span><span class="nd">:0</span> <span class="nt">fc</span><span class="o">:</span><span class="nf">#000</span> <span class="nt">fo</span><span class="nd">:1</span> <span class="nt">ts</span><span class="nd">:normal</span> <span class="nt">tw</span><span class="nd">:normal</span> <span class="nt">tf</span><span class="nd">:Times</span> <span class="nt">tz</span><span class="nd">:16px</span>
<span class="nt">text</span> <span class="nt">15</span> <span class="nt">197</span> <span class="nt">0</span>
<span class="nt">text</span> <span class="nt">55</span> <span class="nt">197</span> <span class="nt">1</span>
<span class="nt">text</span> <span class="nt">95</span> <span class="nt">197</span> <span class="nt">2</span>
<span class="nt">text</span> <span class="nt">135</span> <span class="nt">197</span> <span class="nt">3</span>
<span class="nt">text</span> <span class="nt">5</span> <span class="nt">185</span> <span class="nt">0</span>
<span class="nt">text</span> <span class="nt">5</span> <span class="nt">145</span> <span class="nt">1</span>
<span class="nt">text</span> <span class="nt">5</span> <span class="nt">105</span> <span class="nt">2</span>
<span class="nt">text</span> <span class="nt">5</span> <span class="nt">65</span> <span class="nt">3</span>

<span class="nt">style</span> <span class="nt">lc</span><span class="o">:</span><span class="nf">#f00</span> <span class="nt">ls</span><span class="nd">:0</span> <span class="nt">lw</span><span class="nd">:1</span><span class="nc">.5</span> <span class="nt">lo</span><span class="nd">:1</span> <span class="nt">fc</span><span class="o">:</span><span class="nf">#fff</span>
<span class="nt">circle</span> <span class="nt">20</span> <span class="nt">100</span> <span class="nt">3</span>
<span class="nt">circle</span> <span class="nt">40</span> <span class="nt">80</span> <span class="nt">3</span>
<span class="nt">circle</span> <span class="nt">60</span> <span class="nt">60</span> <span class="nt">3</span>
<span class="nt">circle</span> <span class="nt">80</span> <span class="nt">55</span> <span class="nt">3</span>
<span class="nt">circle</span> <span class="nt">100</span> <span class="nt">60</span> <span class="nt">3</span>
<span class="nt">circle</span> <span class="nt">120</span> <span class="nt">80</span> <span class="nt">3</span>
<span class="nt">circle</span> <span class="nt">140</span> <span class="nt">100</span> <span class="nt">3</span>
<span class="o">&lt;/</span><span class="nt">oo</span><span class="o">&gt;</span>
</code></pre></div></div>

<p>where the point must be determined manually by viewing it repeatedly, switch between texteditor and browser, which is not so efficient.</p>

<h2 id="js-code">JS code</h2>
<p>A function using JS can be constructed to automatize the process. First make an array of the data</p>

<div class="language-batch highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">data</span> <span class="o">=</span> <span class="sb">`
0, 2
0.5, 2.5
1, 3
1.5, 3.125
2, 3
2.5, 2.5
3, 2
`</span><span class="o">;</span>
</code></pre></div></div>

<p>then clear blank lines and make arrays of $x$ and $y$</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">data</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="se">\n</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">data</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span>
<span class="nx">data</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span>

<span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="p">[];</span>
<span class="kd">var</span> <span class="nx">y</span> <span class="o">=</span> <span class="p">[];</span>
<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">cols</span> <span class="o">=</span> <span class="nx">data</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span>
	<span class="nx">x</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">cols</span><span class="p">[</span><span class="mi">0</span><span class="p">]));</span>
	<span class="nx">y</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">cols</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>For next process we require a JS class named <code class="language-plaintext highlighter-rouge">Conversion</code></p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nx">Conversion</span> <span class="p">{</span>
	<span class="kd">constructor</span><span class="p">()</span> <span class="p">{</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">min</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">max</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">MIN</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
		<span class="k">this</span><span class="p">.</span><span class="nx">MAX</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
	<span class="p">}</span>
	
	<span class="k">from</span><span class="p">()</span> <span class="p">{</span>
		<span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
		<span class="kd">var</span> <span class="nx">I</span> <span class="o">=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">-</span> <span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span> <span class="o">-</span> <span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">);</span>
		<span class="nx">I</span> <span class="o">*=</span> <span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">MAX</span> <span class="o">-</span> <span class="k">this</span><span class="p">.</span><span class="nx">MIN</span><span class="p">);</span>
		<span class="nx">I</span> <span class="o">+=</span> <span class="k">this</span><span class="p">.</span><span class="nx">MIN</span><span class="p">;</span>
		<span class="k">return</span> <span class="nx">I</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p>which is simply as temperature unit conversion [<a href="#ref3">3</a>]. And we must provide source and target coordinates</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">xmin</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">ymin</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">xmax</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">ymax</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>

<span class="kd">var</span> <span class="nx">XMIN</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">YMIN</span> <span class="o">=</span> <span class="mi">180</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">XMAX</span> <span class="o">=</span> <span class="mi">180</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">YMAX</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
</code></pre></div></div>

<p>After all preparations we can do the conversion simply as follow</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">cx</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Conversion</span><span class="p">(</span><span class="nx">xmin</span><span class="p">,</span> <span class="nx">xmax</span><span class="p">,</span> <span class="nx">XMIN</span><span class="p">,</span> <span class="nx">XMAX</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">cy</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Conversion</span><span class="p">(</span><span class="nx">ymin</span><span class="p">,</span> <span class="nx">ymax</span><span class="p">,</span> <span class="nx">YMIN</span><span class="p">,</span> <span class="nx">YMAX</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">X</span> <span class="o">=</span> <span class="p">[];</span>
<span class="kd">var</span> <span class="nx">Y</span> <span class="o">=</span> <span class="p">[];</span>
<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="k">in</span> <span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
	<span class="nx">X</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">cx</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">i</span><span class="p">]));</span>
	<span class="nx">Y</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">cy</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">i</span><span class="p">]));</span>
<span class="p">}</span>
</code></pre></div></div>

<p>To produce the points in <code class="language-plaintext highlighter-rouge">oo</code> we can use following code</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">style</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">lc:#f00 ls:0 lw:1.5 lo:1 fc:#fff</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">oot</span> <span class="o">=</span> <span class="nx">ooPointTextFromXYPoints</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span> <span class="nx">Y</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="nx">style</span><span class="p">);</span>
</code></pre></div></div>

<p>which requires</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">ooPointTextFromXYPoints</span><span class="p">()</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">X</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
	<span class="kd">var</span> <span class="nx">Y</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
	<span class="kd">var</span> <span class="nx">ps</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
	<span class="kd">var</span> <span class="nx">style</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
	
	<span class="kd">var</span> <span class="nx">N</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">X</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
	<span class="kd">var</span> <span class="nx">ooText</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
	
	<span class="nx">ooText</span> <span class="o">+=</span> <span class="dl">"</span><span class="s2">style </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">style</span> <span class="o">+</span> <span class="dl">"</span><span class="se">\n</span><span class="dl">"</span><span class="p">;</span>	
	<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">N</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">ooText</span> <span class="o">+=</span> <span class="dl">"</span><span class="s2">cirlce </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">X</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">Y</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">ps</span> <span class="o">+</span> <span class="dl">"</span><span class="se">\n</span><span class="dl">"</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="k">return</span> <span class="nx">ooText</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>And to produce connected line or a polyline</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">style2</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">lc:#f00 ls:0 lw:1.5 lo:1</span><span class="dl">"</span><span class="p">;</span>
<span class="kd">var</span> <span class="nx">oot2</span> <span class="o">=</span> <span class="nx">ooLineTextFromXYPoints</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span> <span class="nx">Y</span><span class="p">,</span> <span class="nx">style</span><span class="p">);</span>
</code></pre></div></div>

<p>which requires</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">ooLineTextFromXYPoints</span><span class="p">()</span> <span class="p">{</span>
	<span class="kd">var</span> <span class="nx">X</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
	<span class="kd">var</span> <span class="nx">Y</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
	<span class="kd">var</span> <span class="nx">style</span> <span class="o">=</span> <span class="nx">arguments</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
	
	<span class="kd">var</span> <span class="nx">N</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">X</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span> <span class="nx">Y</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span>
	<span class="kd">var</span> <span class="nx">ooText</span> <span class="o">=</span> <span class="dl">""</span><span class="p">;</span>
	
	<span class="nx">ooText</span> <span class="o">+=</span> <span class="dl">"</span><span class="s2">style </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">style</span> <span class="o">+</span> <span class="dl">"</span><span class="se">\n</span><span class="dl">"</span><span class="p">;</span>	
	<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">N</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="nx">ooText</span> <span class="o">+=</span> <span class="dl">"</span><span class="s2">line </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">X</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">Y</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span>
		<span class="nx">ooText</span> <span class="o">+=</span> <span class="nx">X</span><span class="p">[</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="dl">"</span><span class="s2"> </span><span class="dl">"</span> <span class="o">+</span> <span class="nx">Y</span><span class="p">[</span><span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="dl">"</span><span class="se">\n</span><span class="dl">"</span><span class="p">;</span>
	<span class="p">}</span>
	
	<span class="k">return</span> <span class="nx">ooText</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>and the results, especially the additional lines, is shown in Fig. <a href="#fig:osp-yx-line">2</a></p>

<oo>
svg 200 200 #fafafa fig:osp-yx-line|Scatter of $y$ againts $x$ with line.

style lc:#000 ls:6-2 lw:0.3 lo:0.8
grid 20 20 180 180 40 40
style lc:#000 ls:0 lw:1 lo:1 fc:#000
arrow 20 180 180 180
arrow 20 180 20 20
style lc:#000 ls:0 lw:1 lo:1 fc:#000
circle 20 180 2
style lw:0 fc:#000 fo:1 ts:italic tw:normal tf:Times tz:16px
text 186 183 x
text 18 12 y

style lw:0 fc:#000 fo:1 ts:normal tw:normal tf:Times tz:16px
text 15 197 0
text 55 197 1
text 95 197 2
text 135 197 3
text 5 185 0
text 5 145 1
text 5 105 2
text 5 65 3

style lc:#f00 ls:0 lw:1.5 lo:1 fc:#fff
line 20 100 40 80
line 40 80 60 60
line 60 60 80 55
line 80 55 100 60
line 100 60 120 80
line 120 80 140 100

style lc:#f00 ls:0 lw:1.5 lo:1 fc:#fff
circle 20 100 3
circle 40 80 3
circle 60 60 3
circle 80 55 3
circle 100 60 3
circle 120 80 3
circle 140 100 3
</oo>

<h2 id="note">Note</h2>
<p>Previously given codes are not entirely code snippets, where some are already so obvious and some are for <code class="language-plaintext highlighter-rouge">oo</code> but also reusable for other purposes.</p>

<h2 id="references">References</h2>
<ol>
  <li><a name="ref1"></a>Wikipedia contributors, “Scatter plot”, Wikipedia, The Free Encyclopedia, 10 Sep 2020, 22:11 UTC, <a href="https://en.wikipedia.org/w/index.php?oldid=977773986">https://en.wikipedia.org/w/index.php?oldid=977773986</a> [20201005].</li>
  <li><a name="ref2"></a>Diagram parser <code class="language-plaintext highlighter-rouge">oo</code> using JS is developed by Sparisoma Viridi and Fiki Taufik Akbar Sobar, url <a href="https://github.com/dudung/oo">https://github.com/dudung/oo</a> [20201005].</li>
  <li><a name="ref3"></a>Wikipedia contributors, “Conversion of units of temperature”, Wikipedia, The Free Encyclopedia, 27 Aug 2020, 03:54 UTC, <a href="https://en.wikipedia.org/w/index.php?oldid=975170529">https://en.wikipedia.org/w/index.php?oldid=975170529</a> [20201006].</li>
</ol>

<ul>
  <li><a href="https://github.com/butiran/butiran.github.io/commits/master/_posts/code/js/oo/2020-10-05-oo-scatter-plot.md">Article history</a></li>
</ul>

:ET